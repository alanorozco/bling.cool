/**
 * Copyright 2019 Alan Orozco <alan@orozco.xyz>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

// defaults
$lineHeight: 1.5;
$toolbarHeight: 48px;
$bodyBorder: 20px;
$marginUnit: 20px;

// colors
$blueR: 0;
$blueG: 68;
$blueB: 214;
$blue: rgb($blueR, $blueG, $blueB);
$grayish: rgb(147, 153, 160);

// text shadow
$shadowX: 6px;
$shadowY: 6px;
$shadowBlur: 12px;
$shadowOpacity: 0.48;

// lightbox
$lightboxAnimationDuration: 300ms;

// overrides: 3p/style-range-inputs/style-range-inputs
$track-color: $grayish;
$thumb-color: $grayish;

$smallView: '(max-width: 600px)';

@import '../3p/style-range-inputs/style-range-inputs';

body {
  margin: 0;
  padding: $marginUnit;
  font-family: 'Chalkboard', 'Comic Sans MS', sans-serif;
  font-size: 18px;
  line-height: $lineHeight;
  overflow: hidden;
  min-height: 100vh;

  [amp] & {
    padding: 0;
  }

  @media #{$smallView} {
    font-size: 16px;
  }
}

amp-script {
  padding: $marginUnit;
}

amp-script,
body {
  @media #{$smallView} {
    padding-left: 0;
    padding-right: 0;
  }
}

.hide-on-small {
  @media #{$smallView} {
    display: none;
  }
}

.not-ready {
  opacity: 0;
  pointer-events: none;
}

.border {
  z-index: -1;
}

.border,
.fill {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

.loader {
  background: white url(/assets/cat.gif) no-repeat center center;
  background-size: 604px 32px;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  top: $marginUnit * 3 + 0.5 * $toolbarHeight;
  height: $toolbarHeight * 2;
  left: $marginUnit;
  right: $marginUnit;
  z-index: 2;

  @media #{$smallView} {
    // no borders on left/right
    left: 0;
    right: 0;
  }

  &.active {
    opacity: 1;
    pointer-events: all;
    display: block;
  }
}

h1,
footer {
  margin: $marginUnit 0;
  text-align: center;
  font: inherit;
  text-transform: lowercase;
}

footer {
  font-size: 82%;

  > .buggy {
    color: darken($grayish, 20%);
  }

  @media #{$smallView} {
    font-size: 100%;
    padding: 0 $marginUnit;
  }
}

p {
  margin: ($marginUnit / 2) 0;
}

main {
  background: white;
  box-sizing: border-box;
  width: calc(100vw - #{2 * $bodyBorder});
  height: calc(100vh - #{2 * $bodyBorder});
  padding: $marginUnit 0;

  @media #{$smallView} {
    width: 100vw;
  }
}

main,
.editable-wrap {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.editable-wrap {
  flex: 1;
  cursor: text;
  box-sizing: border-box;
  padding: 0 40px;
  width: 100%;
  overflow: hidden;

  > div,
  > textarea {
    outline: none;
    text-align: center;
    background-clip: text;
    -webkit-background-clip: text;
    position: relative;

    max-width: calc(100vw - #{$marginUnit * 2});

    // It would be nice to use `color: transparent`, but chrome "optimizes"
    // it so it's clipped.
    color: white;
    -webkit-text-fill-color: transparent;

    // Some padding is needed so text is not clipped.
    padding: 40px;

    // And for dynamic resizing:
    box-sizing: border-box;

    // TODO: Maybe this can be analyzed on build time based on font, as some
    // leave very large line gaps. Nice to have.
    line-height: 1.3;
  }

  > .editable-text-fitter,
  > .editable-shadow {
    position: absolute;
  }

  [amp] & {
    display: block;

    > div,
    > textarea {
      // no display: flex since we're using a textarea and not a
      // [contenteditable]
      text-align: center;

      // default for AMP (static)
      font-size: 72px;

      // they have to be fixed size :(
      position: absolute;
      overflow: hidden;
      width: calc(100% - #{6 * $marginUnit});
      height: 30vh;
      padding: 0;
      margin-top: 20vh;

      // like textareas:
      word-wrap: break-word;

      @media #{$smallView} {
        font-size: 32px;
        width: calc(100% - #{4 * $marginUnit});
      }
    }
  }
}

.editable-text-fitter {
  color: transparent;
}

.textured,
.texture-option {
  background-color: $blue;
}

$panelContentHeight: 90px;

.texture-option {
  width: $panelContentHeight;
  height: $panelContentHeight;
  margin: 0 $marginUnit / 2;
  display: block;
  cursor: pointer;
  transition: transform 0.3s, opacity 0.3s;
  opacity: 0.9;
  position: relative;

  &:hover,
  &.selected {
    transform: scale(1.1);
    opacity: 1;
  }

  &.selected {
    outline: 2px solid $blue;

    &:after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(lighten($blue, 50%), 0.5);
    }
  }
}

$panelMarginForScrollbarUgh: 18px;
$panelGradientWidth: 60px;

.panel {
  width: 100%;
  position: relative;
  border-top: 2px solid $grayish;
  padding: $marginUnit;
  box-sizing: border-box;

  &.sliding {
    overflow: hidden;
    height: $panelContentHeight + $marginUnit * 2;
    padding: 0;

    &:after,
    &:before {
      content: '';
      display: block;
      position: absolute;
      top: 0;
      width: $panelGradientWidth;
      height: $panelContentHeight + $marginUnit * 2;
      pointer-events: none;
      z-index: 10000;
    }

    &:before {
      background: linear-gradient(to left, rgba(255, 255, 255, 0), white 80%);
    }

    &:after {
      background: linear-gradient(to right, rgba(255, 255, 255, 0), white 80%);
      right: 0;
    }

    > .panel-slider {
      overflow-y: hidden;
      overflow-x: scroll;
      white-space: nowrap;
      height: $panelContentHeight + 2 * $marginUnit +
        $panelMarginForScrollbarUgh;
      box-sizing: border-box;
      padding: $marginUnit ($marginUnit / 2 + $panelGradientWidth)
        ($marginUnit + $panelMarginForScrollbarUgh);

      > div {
        display: inline-block;
      }
    }
  }
}

@keyframes slideDownFadeIn {
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}

.panel-fx {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

#editable {
  caret-color: rgba($blue, 0.8);
  position: absolute;

  // ayy lmao ðŸ‘½
  // hack to make chrome show the editor caret when the area is empty.
  min-width: 10px;
  text-align: center;
}

textarea#editable {
  color: transparent;
  -webkit-text-fill-color: auto;
  background-clip: border-box;
  background: transparent;
  border: none;
  resize: none;
}

a {
  color: $blue;
  font-weight: bold;
  text-decoration: none;
  &:hover,
  &:active {
    color: lighten($blue, 20%);
  }
}

.editable-shadow {
  // TODO: expose via ui
  text-shadow: $shadowX $shadowY $shadowBlur rgba($blue, $shadowOpacity);
}

$buttonRadius: 32px;

.toolbar {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  margin: 0 0 $marginUnit;
  font-size: 14px;
  color: darken($grayish, 20%);
  line-height: $toolbarHeight;
  position: relative;

  > label {
    margin: 0 ($marginUnit / 2);

    @media #{$smallView} {
      margin: 0;
    }
  }

  input,
  select,
  button {
    font: inherit;
    color: inherit;
  }
  button,
  select {
    outline: none;
    background: transparent;
    border: 2px solid $grayish;
    border-radius: $buttonRadius;
    text-align: center;
    text-align-last: center;
    line-height: $lineHeight;
  }

  @media #{$smallView} {
    button,
    select {
      border-radius: 0;
      margin-left: -2px;
    }
  }

  > label:first-child {
    button,
    select {
      @media #{$smallView} {
        margin-left: 0;
        border-top-left-radius: $buttonRadius;
        border-bottom-left-radius: $buttonRadius;
      }
    }
  }

  > label:last-child {
    button,
    select {
      @media #{$smallView} {
        border-top-right-radius: $buttonRadius;
        border-bottom-right-radius: $buttonRadius;
      }
    }
  }

  button {
    padding: ($marginUnit / 4) $marginUnit;

    @media #{$smallView} {
      padding: ($marginUnit / 4) ($marginUnit / 1.5);
    }
  }

  select {
    padding: ($marginUnit / 4) ($marginUnit / 2);
    -webkit-appearance: none;
  }
}

$toggleButtonArrowWidth: 10px;

$fontPreviewHeight: 32px;
$fontPreviewSize: 20px;

$fontOptionWidth: 160px;
$fontOptionHeight: $fontPreviewHeight + 20px;

$fontOptionMargin: 0.5 * $marginUnit;

$effectiveFontPanelHeight: 2 * ($fontOptionHeight + 2 * $fontOptionMargin) + 2 *
  $marginUnit;

.panel-font.sliding {
  height: $effectiveFontPanelHeight;

  &:before,
  &:after {
    height: $effectiveFontPanelHeight;
  }

  > .panel-slider {
    height: $effectiveFontPanelHeight + $panelMarginForScrollbarUgh;
  }
}

.selected-font {
  width: $fontOptionWidth;
  text-align: center;
}

.font-option {
  width: $fontOptionWidth;
  height: $fontOptionHeight + 2 * $fontOptionMargin;
  padding: $fontOptionMargin;
  box-sizing: border-box;
  margin-right: $fontOptionMargin;
  cursor: pointer;
  border-radius: 4px;

  &.selected {
    background: lighten($blue, 10%);
  }

  &.selected,
  &.selected .font-name {
    color: white;
  }

  &:nth-child(even) {
    position: absolute;
    margin: ($fontOptionHeight + 3 * $fontOptionMargin) $fontOptionMargin 0
      (-$fontOptionWidth - $fontOptionMargin);
  }
}

.font-preview {
  height: $fontPreviewHeight;
  line-height: $fontPreviewHeight;
  font-size: $fontPreviewSize;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.font-name {
  color: $grayish;
  font-size: 80%;
}

.panel-toggle {
  position: relative;

  &.selected {
    &:after,
    &:before {
      pointer-events: none;
      // idk why 4px
      top: calc(100% + 4px);
      left: 50%;
      border: solid transparent;
      content: ' ';
      height: 0;
      width: 0;
      position: absolute;
      pointer-events: none;
      z-index: 10000;
    }

    &:after {
      border-color: transparent;
      border-bottom-color: #fff;
      border-width: $toggleButtonArrowWidth;
      margin-left: -$toggleButtonArrowWidth;

      // hack hack hack
      transform-origin: center top;
      transform: scale(1.1);
    }
    &:before {
      border-color: transparent;
      border-bottom-color: $grayish;
      border-width: $toggleButtonArrowWidth + 3px;
      margin-left: -($toggleButtonArrowWidth + 3px);
      margin-top: -6px;
    }
  }
}

.encode-button {
  amp-script & {
    display: none;
  }
}

.encoded-lightbox {
  position: absolute;
  left: $marginUnit;
  top: $marginUnit;
  right: $marginUnit;
  bottom: $marginUnit;
  z-index: 10000 + 1;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  padding: $marginUnit * 2;
  background: white;
  align-items: center;
  justify-content: center;

  &:not([hidden]) {
    opacity: 0;
    transform: scale(0);
    animation: $lightboxAnimationDuration whoa ease-out;
    animation-fill-mode: both;
  }

  a {
    padding: $marginUnit / 2;
  }
}

@keyframes whoa {
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.close-button {
  font-weight: normal;
}

option {
  text-align: left;
}

[hidden] {
  display: none;
}
